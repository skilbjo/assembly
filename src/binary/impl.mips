.text

# binary_convert must:
# - be named binary_convert and declared as global
# - read input address of string from a0
# - follow the convention of using the t0-9 registers for temporary storage
# - (if it uses s0-7 then it is responsible for pushing existing values to the
# stack then popping them back off before returning)
# - write integer result to v0
#
# '101' should return 101

.globl binary_convert

binary_convert:
        move $t0, $a0           # $t0 now has address of string
        li $v0, 0               # reset accumulator

loop:
        lb $t1, 0($t0)          # load first byte of input
        beq $t1,$zero,exit
        sll $v0, $v0, 1         # increase accumulator by 2^n
        sub $t2, $t1, 48        # ascii 0 = binary 48. subtract into $t2
        add $v0, $v0, $t2       # add $t2 to accumulator
        addi $t0, $t0, 1        # increment pointer
        j loop

exit:
        jr $ra

binary_convert_my_crappy_implementation:
        lw      $t0,0($a0)         # load data from a0 into t1
        li      $t1,1000000        # mask for binary 2^7
        and     $t9,$t9,$t1        # subtotal
        li      $t1,0100000        # mask for binary 2^6
        and     $t9,$t9,$t1        # subtotal
        li      $t1,0010000        # mask for binary 2^5
        and     $t9,$t9,$t1        # subtotal
        li      $t1,0001000        # mask for binary 2^4
        and     $t9,$t9,$t1        # subtotal
        li      $t1,0000100        # mask for binary 2^3
        and     $t9,$t9,$t1        # subtotal
        li      $t1,0000010        # mask for binary 2^2
        and     $t9,$t9,$t1        # subtotal
        li      $t1,0000001        # mask for binary 2^2
        and     $t9,$t9,$t1        # subtotal
        sll     $s0,$t9,0          # final answer - from s into v
        #sw      $t9,0($s7)         # put final temp var into s register
        sll     $v0,$v0,1          # final answer - from s into v
        addu    $v0,$v0,$t3        # final answer - from s into v
        #sw      $s7,0($v0)         # final answer - from s into v



